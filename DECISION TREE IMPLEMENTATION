# 1. Import Required Libraries
import pandas as pd
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.metrics import classification_report, accuracy_score
import matplotlib.pyplot as plt
import seaborn as sns

# 2. Load Dataset (Iris Dataset)
iris = load_iris()
X = pd.DataFrame(iris.data, columns=iris.feature_names)
y = pd.Series(iris.target)

# Optional: Display first few rows
print("Sample Data:")
print(X.head())

# 3. Split into Training and Testing
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# 4. Create and Train Decision Tree Model
clf = DecisionTreeClassifier(criterion='gini', max_depth=3, random_state=42)
clf.fit(X_train, y_train)

# 5. Predict on Test Data
y_pred = clf.predict(X_test)

# 6. Evaluate the Model
print("\nClassification Report:")
print(classification_report(y_test, y_pred, target_names=iris.target_names))

print("Accuracy Score:", accuracy_score(y_test, y_pred))

# 7. Visualize the Decision Tree
plt.figure(figsize=(12,8))
plot_tree(clf, feature_names=iris.feature_names, class_names=iris.target_names, filled=True, rounded=True)
plt.title("Decision Tree Visualization (Iris Dataset)")
plt.show()
